"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[832],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=c(n),m=i,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[f]="string"==typeof e?e:i,a[1]=p;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={id:"filter",title:"filter",tags:["filter","option","right-biased"]},a=void 0,p={unversionedId:"api/option/filter",id:"api/option/filter",title:"filter",description:"Calls the provided predicate function on the contained value T if the Option is Some(T), and returns Some(T) if",source:"@site/docs/api/option/filter.mdx",sourceDirName:"api/option",slug:"/api/option/filter",permalink:"/tightrope/api/option/filter",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/option/filter.mdx",tags:[{label:"filter",permalink:"/tightrope/tags/filter"},{label:"option",permalink:"/tightrope/tags/option"},{label:"right-biased",permalink:"/tightrope/tags/right-biased"}],version:"current",frontMatter:{id:"filter",title:"filter",tags:["filter","option","right-biased"]},sidebar:"sidebar",previous:{title:"expect",permalink:"/tightrope/api/option/expect"},next:{title:"flatten",permalink:"/tightrope/api/option/flatten"}},l={},c=[{value:"Example",id:"example",level:2}],s={toc:c},f="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(f,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Calls the provided predicate function on the contained value T if the ",(0,i.kt)("a",{parentName:"p",href:"/tightrope/api/option"},(0,i.kt)("inlineCode",{parentName:"a"},"Option"))," is ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(T)"),", and returns ",(0,i.kt)("inlineCode",{parentName:"p"},"Some(T)")," if\nthe function returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"; otherwise, returns ",(0,i.kt)("inlineCode",{parentName:"p"},"None")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { pipe } from 'tightrope/fn/pipe';\nimport { filter } from 'tightrope/option/filter';\nimport { none } from 'tightrope/option';\nimport { Some } from 'tightrope/option';\n\nconst result = pipe(\n  new Some(2),\n  filter((value) => value % 2 === 0),\n);\n// result is a new Some(2)\n\nconst result2 = pipe(\n  none,\n  filter((value) => value % 2 === 0),\n);\n// result2 is none\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This function is right-biased, meaning that if the input ",(0,i.kt)("inlineCode",{parentName:"p"},"Option")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),", it immediately returns ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," without\nevaluating the predicate function.")))}u.isMDXComponent=!0}}]);