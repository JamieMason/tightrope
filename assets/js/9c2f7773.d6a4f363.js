"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1296],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),s=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(u.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(t),f=a,g=c["".concat(u,".").concat(f)]||c[f]||d[f]||i;return t?n.createElement(g,l(l({ref:r},p),{},{components:t})):n.createElement(g,l({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=f;var o={};for(var u in r)hasOwnProperty.call(r,u)&&(o[u]=r[u]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5473:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const i={id:"is-array-including-all-of",title:"isArrayIncludingAllOf",tags:["arrays","guard","multiple-conditions"]},l=void 0,o={unversionedId:"api/guard/is-array-including-all-of",id:"api/guard/is-array-including-all-of",title:"isArrayIncludingAllOf",description:"Asserts that value is an Array including all of the values provided in allowedValues. It could also include",source:"@site/docs/api/guard/is-array-including-all-of.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-array-including-all-of",permalink:"/tightrope/api/guard/is-array-including-all-of",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-array-including-all-of.mdx",tags:[{label:"arrays",permalink:"/tightrope/tags/arrays"},{label:"guard",permalink:"/tightrope/tags/guard"},{label:"multiple-conditions",permalink:"/tightrope/tags/multiple-conditions"}],version:"current",frontMatter:{id:"is-array-including-all-of",title:"isArrayIncludingAllOf",tags:["arrays","guard","multiple-conditions"]},sidebar:"sidebar",previous:{title:"isArray",permalink:"/tightrope/api/guard/is-array"},next:{title:"isArrayIncludingAnyOf",permalink:"/tightrope/api/guard/is-array-including-any-of"}},u={},s=[],p={toc:s},c="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(c,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Asserts that ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," is an ",(0,a.kt)("inlineCode",{parentName:"p"},"Array")," including all of the values provided in ",(0,a.kt)("inlineCode",{parentName:"p"},"allowedValues"),". It could also include\nadditional values or be in a different order, but if every value in ",(0,a.kt)("inlineCode",{parentName:"p"},"allowedValues")," features in ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," then this\nwill return ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."))}d.isMDXComponent=!0}}]);