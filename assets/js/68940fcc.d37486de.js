"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8468],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(t),s=l,f=c["".concat(u,".").concat(s)]||c[s]||y[s]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=s;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1906:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(7462),l=(t(7294),t(3905));const a={},i=void 0,o={unversionedId:"api/fn/types",id:"api/fn/types",title:"types",description:"AnyRecord",source:"@site/docs/api/fn/types.mdx",sourceDirName:"api/fn",slug:"/api/fn/types",permalink:"/tightrope/api/fn/types",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/fn/types.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"tap",permalink:"/tightrope/api/fn/tap"},next:{title:"Guard",permalink:"/tightrope/api/guard"}},u={},d=[{value:"AnyRecord",id:"anyrecord",level:2},{value:"AnyFn",id:"anyfn",level:2},{value:"AnyGuard",id:"anyguard",level:2},{value:"UnaryGuard",id:"unaryguard",level:2},{value:"BinaryGuard",id:"binaryguard",level:2},{value:"VoidFn",id:"voidfn",level:2},{value:"R",id:"r",level:2},{value:"Gen",id:"gen",level:2},{value:"AsyncGen",id:"asyncgen",level:2},{value:"GenYield",id:"genyield",level:2},{value:"AsyncGenYield",id:"asyncgenyield",level:2},{value:"Reducer",id:"reducer",level:2},{value:"ResOk",id:"resok",level:2},{value:"ResErr",id:"reserr",level:2},{value:"AnyResult",id:"anyresult",level:2},{value:"ResultUnion",id:"resultunion",level:2},{value:"AnyOk",id:"anyok",level:2},{value:"AnyErr",id:"anyerr",level:2}],p={toc:d},c="wrapper";function y(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"anyrecord"},"AnyRecord"),(0,l.kt)("p",null,"Misc Object"),(0,l.kt)("h2",{id:"anyfn"},"AnyFn"),(0,l.kt)("p",null,"A function of any kind"),(0,l.kt)("h2",{id:"anyguard"},"AnyGuard"),(0,l.kt)("p",null,"A guard/isFoo function"),(0,l.kt)("h2",{id:"unaryguard"},"UnaryGuard"),(0,l.kt)("p",null,"A guard/isFoo function which accepts one argument"),(0,l.kt)("h2",{id:"binaryguard"},"BinaryGuard"),(0,l.kt)("p",null,"A guard/isFoo function which accepts two arguments"),(0,l.kt)("h2",{id:"voidfn"},"VoidFn"),(0,l.kt)("p",null,"A function with no arguments or return"),(0,l.kt)("h2",{id:"r"},"R"),(0,l.kt)("p",null,"Alias for ",(0,l.kt)("inlineCode",{parentName:"p"},"ReturnType")),(0,l.kt)("h2",{id:"gen"},"Gen"),(0,l.kt)("p",null,"A Generator only yielding values of type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("h2",{id:"asyncgen"},"AsyncGen"),(0,l.kt)("p",null,"An async Generator only yielding values of type ",(0,l.kt)("inlineCode",{parentName:"p"},"T")),(0,l.kt)("h2",{id:"genyield"},"GenYield"),(0,l.kt)("p",null,"Get the type which a Generator yields"),(0,l.kt)("h2",{id:"asyncgenyield"},"AsyncGenYield"),(0,l.kt)("p",null,"Get the type which an Async Generator yields"),(0,l.kt)("h2",{id:"reducer"},"Reducer"),(0,l.kt)("p",null,"A Reducer function"),(0,l.kt)("h2",{id:"resok"},"ResOk"),(0,l.kt)("p",null,"Get the Ok value type from a Result"),(0,l.kt)("h2",{id:"reserr"},"ResErr"),(0,l.kt)("p",null,"Get the Err value type from a Result"),(0,l.kt)("h2",{id:"anyresult"},"AnyResult"),(0,l.kt)("p",null,"A Result containing anything"),(0,l.kt)("h2",{id:"resultunion"},"ResultUnion"),(0,l.kt)("p",null,"Create a Union of 2 Results"),(0,l.kt)("h2",{id:"anyok"},"AnyOk"),(0,l.kt)("p",null,"An Ok containing anything"),(0,l.kt)("h2",{id:"anyerr"},"AnyErr"),(0,l.kt)("p",null,"An Err containing anything"))}y.isMDXComponent=!0}}]);