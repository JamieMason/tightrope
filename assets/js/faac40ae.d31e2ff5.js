"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1873],{6557:e=>{e.exports=JSON.parse('{"label":"unsafe","permalink":"/tightrope/tags/unsafe","allTagsPath":"/tightrope/tags","count":9,"items":[{"id":"api/number/divide-unsafe","title":"divideUnsafe","description":"Divide two numbers","permalink":"/tightrope/api/number/divide-unsafe"},{"id":"api/option/expect","title":"expect","description":"Unwraps an Option value, returning the underlying value if it is Some. If the value is None, this function","permalink":"/tightrope/api/option/expect"},{"id":"api/result/expect","title":"expect","description":"Extract value from an Ok or throw with the given message on an Err.","permalink":"/tightrope/api/result/expect"},{"id":"api/result/expect-err","title":"expectErr","description":"A higher-order function that takes a message and returns a function that can be used to assert that a given Result","permalink":"/tightrope/api/result/expect-err"},{"id":"api/fn/get-unsafe","title":"getUnsafe","description":"Return a deeply nested value from an object, or undefined.","permalink":"/tightrope/api/fn/get-unsafe"},{"id":"api/fn/invoke-unsafe","title":"invokeUnsafe","description":"Get a deeply nested function from an Object and call it.","permalink":"/tightrope/api/fn/invoke-unsafe"},{"id":"api/option/unwrap","title":"unwrap","description":"Transforms Some(v) to v, or throws an error on a None.","permalink":"/tightrope/api/option/unwrap"},{"id":"api/result/unwrap","title":"unwrap","description":"Extract value from an Ok or throw on an Err.","permalink":"/tightrope/api/result/unwrap"},{"id":"api/result/unwrap-err","title":"unwrapErr","description":"Extract value from an Err or throw on an Ok.","permalink":"/tightrope/api/result/unwrap-err"}]}')}}]);