"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1318],{2596:e=>{e.exports=JSON.parse('{"label":"generator","permalink":"/tightrope/tags/generator","allTagsPath":"/tightrope/tags","count":10,"items":[{"id":"api/gen/filter","title":"filter","description":"Only yield each value which passes the predicate.","permalink":"/tightrope/api/gen/filter"},{"id":"api/guard/is-generator-function","title":"isGeneratorFunction","description":"Asserts that a value is a Function using yield syntax.","permalink":"/tightrope/api/guard/is-generator-function"},{"id":"api/result/iter","title":"iter","description":"Create a generator which yields the Ok variant of a Result.","permalink":"/tightrope/api/result/iter"},{"id":"api/gen/map","title":"map","description":"Transform and yield each value produced by a generator.","permalink":"/tightrope/api/gen/map"},{"id":"api/gen/range","title":"range","description":"Create a generator which will yield a sequence of numbers.","permalink":"/tightrope/api/gen/range"},{"id":"api/gen/reduce","title":"reduce","description":"Reduce every value produced by a generator and yield the final result.","permalink":"/tightrope/api/gen/reduce"},{"id":"api/gen/reduce-each","title":"reduceEach","description":"Reduce and yield each value produced by a generator.","permalink":"/tightrope/api/gen/reduce-each"},{"id":"api/gen/skip","title":"skip","description":"Do not yield values until after first ignoring count values.","permalink":"/tightrope/api/gen/skip"},{"id":"api/gen/take","title":"take","description":"Do not yield values after count values have been yielded.","permalink":"/tightrope/api/gen/take"},{"id":"api/gen/take-last","title":"takeLast","description":"Consume a generator and yield only the final result.","permalink":"/tightrope/api/gen/take-last"}]}')}}]);