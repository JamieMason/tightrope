"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4291],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),c=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=c(e.components);return a.createElement(p.Provider,{value:r},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=c(t),m=n,d=l["".concat(p,".").concat(m)]||l[m]||g[m]||i;return t?a.createElement(d,o(o({ref:r},u),{},{components:t})):a.createElement(d,o({ref:r},u))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[l]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},254:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(7462),n=(t(7294),t(3905));const i={id:"is-greater-than",title:"isGreaterThan",tags:["comparator","guard","numbers"]},o=void 0,s={unversionedId:"api/guard/is-greater-than",id:"api/guard/is-greater-than",title:"isGreaterThan",description:"Asserts that a value is greater than another.",source:"@site/docs/api/guard/is-greater-than.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-greater-than",permalink:"/tightrope/api/guard/is-greater-than",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-greater-than.mdx",tags:[{label:"comparator",permalink:"/tightrope/tags/comparator"},{label:"guard",permalink:"/tightrope/tags/guard"},{label:"numbers",permalink:"/tightrope/tags/numbers"}],version:"current",frontMatter:{id:"is-greater-than",title:"isGreaterThan",tags:["comparator","guard","numbers"]},sidebar:"sidebar",previous:{title:"isGeneratorFunction",permalink:"/tightrope/api/guard/is-generator-function"},next:{title:"isGreaterThanOrEqualTo",permalink:"/tightrope/api/guard/is-greater-than-or-equal-to"}},p={},c=[],u={toc:c},l="wrapper";function g(e){let{components:r,...t}=e;return(0,n.kt)(l,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Asserts that a value is greater than another."))}g.isMDXComponent=!0}}]);