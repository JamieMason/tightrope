"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[929],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=l(n),d=a,m=c["".concat(s,".").concat(d)]||c[d]||f[d]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5547:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={id:"get-unsafe",title:"getUnsafe",tags:["arrays","objects","read","unsafe"]},o=void 0,p={unversionedId:"api/fn/get-unsafe",id:"api/fn/get-unsafe",title:"getUnsafe",description:"Return a deeply nested value from an object, or undefined.",source:"@site/docs/api/fn/get-unsafe.mdx",sourceDirName:"api/fn",slug:"/api/fn/get-unsafe",permalink:"/tightrope/api/fn/get-unsafe",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/fn/get-unsafe.mdx",tags:[{label:"arrays",permalink:"/tightrope/tags/arrays"},{label:"objects",permalink:"/tightrope/tags/objects"},{label:"read",permalink:"/tightrope/tags/read"},{label:"unsafe",permalink:"/tightrope/tags/unsafe"}],version:"current",frontMatter:{id:"get-unsafe",title:"getUnsafe",tags:["arrays","objects","read","unsafe"]},sidebar:"sidebar",previous:{title:"get",permalink:"/tightrope/api/fn/get"},next:{title:"identity",permalink:"/tightrope/api/fn/identity"}},s={},l=[{value:"Example",id:"example",level:2}],u={toc:l},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Return a deeply nested value from an object, or ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,a.kt)("p",null,"A curried function that takes two arguments: a string ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," and an ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," object. It returns the value at the\nspecified path in the object, or ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," if the path does not exist."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"In this example, we first define an object ",(0,a.kt)("inlineCode",{parentName:"p"},"obj")," that has a nested property ",(0,a.kt)("inlineCode",{parentName:"p"},"foo.bar")," with a value of ",(0,a.kt)("inlineCode",{parentName:"p"},"42"),". We then\nuse the ",(0,a.kt)("inlineCode",{parentName:"p"},"getUnsafe")," function to retrieve the value at this path in the object by passing the path and object as\narguments. Note that we also specify the type of the expected value (",(0,a.kt)("inlineCode",{parentName:"p"},"number")," in this case) as a type argument to the\n",(0,a.kt)("inlineCode",{parentName:"p"},"getUnsafe")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { getUnsafe } from 'tightrope/fn/get-unsafe';\n\n// Define an object to query\nconst obj = {\n  foo: {\n    bar: 42,\n  },\n};\n\n// Use getUnsafe to retrieve a value from the object\nconst result = getUnsafe<number>('foo.bar', obj); // returns 42\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getUnsafe")," function works by splitting the ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," argument on the ",(0,a.kt)("inlineCode",{parentName:"p"},".")," character, then using the resulting array\nof property names to recursively access nested properties in the ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," object. If any of the intermediate\nproperties do not exist or are not objects, the function returns ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getUnsafe")," function is implemented using the ",(0,a.kt)("inlineCode",{parentName:"p"},"curry")," function, which allows us to partially apply the ",(0,a.kt)("inlineCode",{parentName:"p"},"path"),"\nargument and reuse the function with different ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," objects."))}f.isMDXComponent=!0}}]);