"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5202],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=u(r),f=a,d=c["".concat(l,".").concat(f)]||c[f]||m[f]||i;return r?n.createElement(d,o(o({ref:t},s),{},{components:r})):n.createElement(d,o({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6973:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={id:"expect",title:"expect"},o=void 0,p={unversionedId:"api/result/expect",id:"api/result/expect",title:"expect",description:"Summary",source:"@site/docs/api/result/expect.mdx",sourceDirName:"api/result",slug:"/api/result/expect",permalink:"/tightrope/api/result/expect",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/result/expect.mdx",tags:[],version:"current",frontMatter:{id:"expect",title:"expect"},sidebar:"sidebar",previous:{title:"Err",permalink:"/tightrope/api/result/err"},next:{title:"expectErr",permalink:"/tightrope/api/result/expect-err"}},l={},u=[{value:"Summary",id:"summary",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],s={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/expect"},(0,a.kt)("inlineCode",{parentName:"a"},"expect"))," to unwrap a ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Result")),' when you are "certain" that the ',(0,a.kt)("inlineCode",{parentName:"p"},"Result"),"\nvalue will be an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/ok"},(0,a.kt)("inlineCode",{parentName:"a"},"Ok")),", and you want to extract the value contained in it."),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," value ever turns out to be an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/err"},(0,a.kt)("inlineCode",{parentName:"a"},"Err")),", it will throw an ",(0,a.kt)("inlineCode",{parentName:"p"},"Error"),"\nwith the given message. This can be useful when you know that the value you\nwant to extract will always be an ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If what you thought would be impossible ever does happen, you will want to\nknow about it, the function will throw an ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," if it is an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err"),".")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { pipe } from 'tightrope/fn/pipe';\nimport { multiply } from 'tightrope/number/multiply';\nimport { sum } from 'tightrope/number/sum';\nimport { expect } from 'tightrope/result/expect';\nimport { fromSuccess } from 'tightrope/result/from-success';\n\nconst result: number = pipe(\n  fromSuccess(10),\n  multiply(2),\n  sum(5),\n  expect(\"I can't imagine this failing\"),\n);\n\n// result will be 25\n")),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/core/result/enum.Result.html#method.expect"},"https://doc.rust-lang.org/core/result/enum.Result.html#method.expect"))))}m.isMDXComponent=!0}}]);