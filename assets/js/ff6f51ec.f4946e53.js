"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),m=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=m(n),h=a,d=u["".concat(l,".").concat(h)]||u[h]||s[h]||r;return n?o.createElement(d,i(i({ref:t},c),{},{components:n})):o.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var m=2;m<r;m++)i[m]=n[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var o=n(7462),a=(n(7294),n(3905));const r={id:"match",title:"match",tags:["option","unwrap"]},i=void 0,p={unversionedId:"api/option/match",id:"api/option/match",title:"match",description:"Extract value from both a Some or a None.",source:"@site/docs/api/option/match.mdx",sourceDirName:"api/option",slug:"/api/option/match",permalink:"/tightrope/api/option/match",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/option/match.mdx",tags:[{label:"option",permalink:"/tightrope/tags/option"},{label:"unwrap",permalink:"/tightrope/tags/unwrap"}],version:"current",frontMatter:{id:"match",title:"match",tags:["option","unwrap"]},sidebar:"sidebar",previous:{title:"mapOrElse",permalink:"/tightrope/api/option/map-or-else"},next:{title:"okOr",permalink:"/tightrope/api/option/ok-or"}},l={},m=[{value:"Example",id:"example",level:2}],c={toc:m},u="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Extract value from both a ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/option"},(0,a.kt)("inlineCode",{parentName:"a"},"Some"))," or a ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,a.kt)("p",null,"The match function takes an object containing two functions: ",(0,a.kt)("inlineCode",{parentName:"p"},"Some")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"None"),", which are used to handle the values\nof the ",(0,a.kt)("inlineCode",{parentName:"p"},"Some")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"None")," variants of an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/option"},(0,a.kt)("inlineCode",{parentName:"a"},"Option"))," object. It then returns a new function that takes an ",(0,a.kt)("inlineCode",{parentName:"p"},"Option")," object\nand returns the result of applying either the ",(0,a.kt)("inlineCode",{parentName:"p"},"Some")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"None")," function to the value inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"Option"),", depending\non which variant it contains."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"In this example, ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/option/and-then"},(0,a.kt)("inlineCode",{parentName:"a"},"andThen"))," is used to transform the ",(0,a.kt)("inlineCode",{parentName:"p"},"Some")," variant of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Option")," object."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If the value inside the ",(0,a.kt)("inlineCode",{parentName:"li"},"Some")," variant is greater than ",(0,a.kt)("inlineCode",{parentName:"li"},"50"),", a ",(0,a.kt)("inlineCode",{parentName:"li"},"None")," variant is returned."),(0,a.kt)("li",{parentName:"ul"},"If the value is less than or equal to ",(0,a.kt)("inlineCode",{parentName:"li"},"50"),", a ",(0,a.kt)("inlineCode",{parentName:"li"},"Some")," variant containing the original value is returned.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"match")," function is then used to handle the two possible variants of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Option")," object, printing the\nappropriate message to the console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { pipe } from 'tightrope/fn/pipe';\nimport { andThen } from 'tightrope/option/and-then';\nimport { None } from 'tightrope/option';\nimport { match } from 'tightrope/option/match';\nimport { Some } from 'tightrope/option';\n\nconst option = pipe(\n  60,\n  Some.create,\n  andThen((value) => (value > 50 ? new None() : new Some(value))),\n  match({\n    Some: (value) => `The value is ${value}`,\n    None: () => `Error: Value too high`,\n  }),\n);\n\nconsole.log(option); // Outputs: \"Error: Value too high\"\n")))}s.isMDXComponent=!0}}]);