"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3129],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var i=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=i.createContext({}),u=function(e){var r=i.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=u(e.components);return i.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},b=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),b=n,m=c["".concat(l,".").concat(b)]||c[b]||d[b]||a;return t?i.createElement(m,o(o({ref:r},p),{},{components:t})):i.createElement(m,o({ref:r},p))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=b;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}b.displayName="MDXCreateElement"},4575:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var i=t(7462),n=(t(7294),t(3905));const a={id:"is-divisible-by",title:"isDivisibleBy",tags:["guard","numbers"]},o=void 0,s={unversionedId:"api/guard/is-divisible-by",id:"api/guard/is-divisible-by",title:"isDivisibleBy",description:"Asserts that a value is a Number which results in a whole number when divided by another.",source:"@site/docs/api/guard/is-divisible-by.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-divisible-by",permalink:"/tightrope/api/guard/is-divisible-by",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-divisible-by.mdx",tags:[{label:"guard",permalink:"/tightrope/tags/guard"},{label:"numbers",permalink:"/tightrope/tags/numbers"}],version:"current",frontMatter:{id:"is-divisible-by",title:"isDivisibleBy",tags:["guard","numbers"]},sidebar:"sidebar",previous:{title:"isDecimalNumber",permalink:"/tightrope/api/guard/is-decimal-number"},next:{title:"isEmptyArray",permalink:"/tightrope/api/guard/is-empty-array"}},l={},u=[],p={toc:u},c="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(c,(0,i.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Asserts that a value is a ",(0,n.kt)("inlineCode",{parentName:"p"},"Number")," which results in a whole number when divided by another."))}d.isMDXComponent=!0}}]);