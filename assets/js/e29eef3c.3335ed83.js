"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9176],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=s(r),f=a,d=l["".concat(u,".").concat(f)]||l[f]||g[f]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={id:"is-generator-function",title:"isGeneratorFunction",tags:["functions","generator","guard"]},o=void 0,c={unversionedId:"api/guard/is-generator-function",id:"api/guard/is-generator-function",title:"isGeneratorFunction",description:"Asserts that a value is a Function using yield syntax.",source:"@site/docs/api/guard/is-generator-function.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-generator-function",permalink:"/tightrope/api/guard/is-generator-function",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-generator-function.mdx",tags:[{label:"functions",permalink:"/tightrope/tags/functions"},{label:"generator",permalink:"/tightrope/tags/generator"},{label:"guard",permalink:"/tightrope/tags/guard"}],version:"current",frontMatter:{id:"is-generator-function",title:"isGeneratorFunction",tags:["functions","generator","guard"]},sidebar:"sidebar",previous:{title:"isFunction",permalink:"/tightrope/api/guard/is-function"},next:{title:"isGreaterThan",permalink:"/tightrope/api/guard/is-greater-than"}},u={},s=[],p={toc:s},l="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(l,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Asserts that a value is a ",(0,a.kt)("inlineCode",{parentName:"p"},"Function")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"yield")," syntax."))}g.isMDXComponent=!0}}]);