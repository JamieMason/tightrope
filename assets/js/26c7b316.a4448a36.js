"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2899],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),f=i,y=c["".concat(s,".").concat(f)]||c[f]||m[f]||a;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9977:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const a={id:"from-try",title:"fromTry"},o=void 0,l={unversionedId:"api/result/from-try",id:"api/result/from-try",title:"fromTry",description:"Summary",source:"@site/docs/api/result/from-try.mdx",sourceDirName:"api/result",slug:"/api/result/from-try",permalink:"/tightrope/api/result/from-try",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/result/from-try.mdx",tags:[],version:"current",frontMatter:{id:"from-try",title:"fromTry"},sidebar:"sidebar",previous:{title:"fromSuccess",permalink:"/tightrope/api/result/from-success"},next:{title:"Result",permalink:"/tightrope/api/result/"}},s={},u=[{value:"Summary",id:"summary",level:2},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"The purpose of ",(0,i.kt)("inlineCode",{parentName:"p"},"fromTry")," is to safely execute a given function and return\neither an ",(0,i.kt)("inlineCode",{parentName:"p"},"Ok")," instance with the result or an ",(0,i.kt)("inlineCode",{parentName:"p"},"Err")," instance with the caught\nerror."),(0,i.kt)("p",null,"The function is executed inside a try-catch block and if it runs without\nerrors, ",(0,i.kt)("inlineCode",{parentName:"p"},"fromTry")," returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"Ok")," instance with the result. Otherwise,\n",(0,i.kt)("inlineCode",{parentName:"p"},"fromTry")," returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"Err")," instance with the caught error."),(0,i.kt)("p",null,"This function is particularly useful when working with functions that may\nthrow errors, as it allows you to handle those errors gracefully with a\n",(0,i.kt)("inlineCode",{parentName:"p"},"Result")," object instead of allowing the error to propagate and crash your\napplication."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { fromTry } from 'tightrope/result/from-try';\n\nfunction divide(a: number, b: number): number {\n  if (b === 0) {\n    throw new Error('Cannot divide by zero!');\n  }\n  return a / b;\n}\n\nconst result = fromTry(() => divide(10, 5));\n// result will be Ok(2)\n\nconst result2 = fromTry(() => divide(10, 0));\n// result2 will be an Err with the caught error message\n")),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://mobily.github.io/ts-belt/api/result/#fromexecution"},"https://mobily.github.io/ts-belt/api/result/#fromexecution")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gigobyte.github.io/purify/adts/Either#static-encase"},"https://gigobyte.github.io/purify/adts/Either#static-encase"))))}m.isMDXComponent=!0}}]);