"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[774],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(r),y=o,f=u["".concat(c,".").concat(y)]||u[y]||m[y]||i;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=y;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},7889:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={id:"is-non-empty-object",title:"isNonEmptyObject"},a=void 0,p={unversionedId:"api/guard/is-non-empty-object",id:"api/guard/is-non-empty-object",title:"isNonEmptyObject",description:"Asserts that a value is an Object containing at least one own member.",source:"@site/docs/api/guard/is-non-empty-object.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-non-empty-object",permalink:"/tightrope/api/guard/is-non-empty-object",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-non-empty-object.mdx",tags:[],version:"current",frontMatter:{id:"is-non-empty-object",title:"isNonEmptyObject"},sidebar:"sidebar",previous:{title:"isNonEmptyArray",permalink:"/tightrope/api/guard/is-non-empty-array"},next:{title:"isNonEmptyString",permalink:"/tightrope/api/guard/is-non-empty-string"}},c={},s=[],l={toc:s},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Asserts that a value is an ",(0,o.kt)("inlineCode",{parentName:"p"},"Object")," containing at least one own member."))}m.isMDXComponent=!0}}]);