"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1126],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),h=a,d=c["".concat(l,".").concat(h)]||c[h]||m[h]||i;return t?n.createElement(d,o(o({ref:r},u),{},{components:t})):n.createElement(d,o({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=h;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[c]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9954:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const i={id:"unwrap-err",title:"unwrapErr",tags:["errors","result","unsafe","unwrap"]},o=void 0,p={unversionedId:"api/result/unwrap-err",id:"api/result/unwrap-err",title:"unwrapErr",description:"Extract value from an Err or throw on an Ok.",source:"@site/docs/api/result/unwrap-err.mdx",sourceDirName:"api/result",slug:"/api/result/unwrap-err",permalink:"/tightrope/api/result/unwrap-err",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/result/unwrap-err.mdx",tags:[{label:"errors",permalink:"/tightrope/tags/errors"},{label:"result",permalink:"/tightrope/tags/result"},{label:"unsafe",permalink:"/tightrope/tags/unsafe"},{label:"unwrap",permalink:"/tightrope/tags/unwrap"}],version:"current",frontMatter:{id:"unwrap-err",title:"unwrapErr",tags:["errors","result","unsafe","unwrap"]},sidebar:"sidebar",previous:{title:"unwrap",permalink:"/tightrope/api/result/unwrap"},next:{title:"unwrapOr",permalink:"/tightrope/api/result/unwrap-or"}},l={},s=[{value:"Example",id:"example",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"See also",id:"see-also",level:2}],u={toc:s},c="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(c,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Extract value from an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Err"))," or throw on an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Ok")),"."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/unwrap-err"},(0,a.kt)("inlineCode",{parentName:"a"},"unwrapErr"))," will throw if the ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Result"))," is an ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok"),".")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"In this example, we're using ",(0,a.kt)("inlineCode",{parentName:"p"},"pipe")," to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," object with an error message using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," constructor.\nThen we're passing that ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," object to ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," to extract the error message. Since the ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," object is in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," variant, ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," will return the error message string."),(0,a.kt)("p",null,"In the second example, since result is in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok")," variant, ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," will throw an error with a message saying\nthat it encountered an ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok")," variant ",(0,a.kt)("inlineCode",{parentName:"p"},"Result"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { pipe } from 'tightrope/fn/pipe';\nimport { Err } from 'tightrope/result';\nimport { Ok } from 'tightrope/result';\nimport { unwrapErr } from 'tightrope/result/unwrap-err';\n\nconst err1: string = pipe(new Err('Error message'), unwrapErr);\n// 'Error message'\n\nconst err2: string = pipe(new Ok('Success!'), unwrapErr);\n// throws: Error('unwrapErr encountered Ok<Success!>')\n")),(0,a.kt)("h2",{id:"use-cases"},"Use Cases"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," is used when you have a ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," object and you want to access the error value inside an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," variant.\nIt is often used in scenarios where you know that the result is an error and you want to access the error value\ndirectly without having to handle it in an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," case."),(0,a.kt)("p",null,"For example, if you have a function that returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," object and you know that it will always return an error\nin a certain scenario, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," to access the error value without having to handle it in an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err"),"\ncase."),(0,a.kt)("p",null,"Another use case for ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," is in test cases, where you want to check that a function returns an error with a\nspecific error message. You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," to access the error message and then compare it with the expected\nvalue."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/expect-err"},(0,a.kt)("inlineCode",{parentName:"a"},"expectErr"))," function and ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," function have different use cases."),(0,a.kt)("p",{parentName:"admonition"},"You would use ",(0,a.kt)("inlineCode",{parentName:"p"},"expectErr")," when you want to explicitly check for an error condition and throw an error if the ",(0,a.kt)("inlineCode",{parentName:"p"},"Result"),"\nis not an error. It is useful for catching programming errors or unexpected behavior."),(0,a.kt)("p",{parentName:"admonition"},"On the other hand, you would use ",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," when you are certain that the ",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," is an error and you want to get\nthe value inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," variant. This is useful when you want to propagate the error up the call stack or when you\nwant to handle the error in some specific way."),(0,a.kt)("p",{parentName:"admonition"},"In general, you should use ",(0,a.kt)("inlineCode",{parentName:"p"},"expectErr")," when you want to catch and handle unexpected error conditions and use\n",(0,a.kt)("inlineCode",{parentName:"p"},"unwrapErr")," when you want to propagate errors or handle them in a specific way.")),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/core/result/enum.Result.html#method.unwrap_err"},"https://doc.rust-lang.org/core/result/enum.Result.html#method.unwrap_err")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://jamiemason.github.io/tightrope/api/result/expect-err"},"https://jamiemason.github.io/tightrope/api/result/expect-err"))))}m.isMDXComponent=!0}}]);