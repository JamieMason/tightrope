"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8650],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),s=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=s(e.components);return a.createElement(c.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(t),d=n,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(f,i(i({ref:r},l),{},{components:t})):a.createElement(f,i({ref:r},l))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=d;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7443:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=t(7462),n=(t(7294),t(3905));const o={id:"has-compare",title:"hasCompare",tags:["arrays","comparator","guard","objects"]},i=void 0,p={unversionedId:"api/guard/has-compare",id:"api/guard/has-compare",title:"hasCompare",description:"Returns true if the nested property of both values match the given predicate",source:"@site/docs/api/guard/has-compare.mdx",sourceDirName:"api/guard",slug:"/api/guard/has-compare",permalink:"/tightrope/api/guard/has-compare",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/has-compare.mdx",tags:[{label:"arrays",permalink:"/tightrope/tags/arrays"},{label:"comparator",permalink:"/tightrope/tags/comparator"},{label:"guard",permalink:"/tightrope/tags/guard"},{label:"objects",permalink:"/tightrope/tags/objects"}],version:"current",frontMatter:{id:"has-compare",title:"hasCompare",tags:["arrays","comparator","guard","objects"]},sidebar:"sidebar",previous:{title:"has",permalink:"/tightrope/api/guard/has"},next:{title:"hasMember",permalink:"/tightrope/api/guard/has-member"}},c={},s=[],l={toc:s},u="wrapper";function m(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,a.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Returns true if the nested property of both values match the given predicate"))}m.isMDXComponent=!0}}]);