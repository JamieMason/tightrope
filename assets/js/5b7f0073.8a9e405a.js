"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7621],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(r),d=a,m=c["".concat(p,".").concat(d)]||c[d]||g[d]||i;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1790:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const i={id:"is-within-range",title:"isWithinRange",tags:["guard","numbers"]},o=void 0,s={unversionedId:"api/guard/is-within-range",id:"api/guard/is-within-range",title:"isWithinRange",description:"Asserts that a value is a Number which is both greater than or equal to floor and less than or equal to",source:"@site/docs/api/guard/is-within-range.mdx",sourceDirName:"api/guard",slug:"/api/guard/is-within-range",permalink:"/tightrope/api/guard/is-within-range",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/guard/is-within-range.mdx",tags:[{label:"guard",permalink:"/tightrope/tags/guard"},{label:"numbers",permalink:"/tightrope/tags/numbers"}],version:"current",frontMatter:{id:"is-within-range",title:"isWithinRange",tags:["guard","numbers"]},sidebar:"sidebar",previous:{title:"isWholeNumber",permalink:"/tightrope/api/guard/is-whole-number"},next:{title:"nestedCompare",permalink:"/tightrope/api/guard/nested-compare"}},p={},l=[],u={toc:l},c="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Asserts that a value is a ",(0,a.kt)("inlineCode",{parentName:"p"},"Number")," which is both greater than or equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"floor")," and less than or equal to\n",(0,a.kt)("inlineCode",{parentName:"p"},"ceiling"),"."))}g.isMDXComponent=!0}}]);