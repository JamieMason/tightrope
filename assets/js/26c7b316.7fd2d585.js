"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2899],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),f=a,d=c["".concat(p,".").concat(f)]||c[f]||m[f]||o;return t?n.createElement(d,i(i({ref:r},u),{},{components:t})):n.createElement(d,i({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9977:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const o={id:"from-try",title:"fromTry",tags:["invoke","result","wrap"]},i=void 0,l={unversionedId:"api/result/from-try",id:"api/result/from-try",title:"fromTry",description:"Create an Ok or Err from try...catch.",source:"@site/docs/api/result/from-try.mdx",sourceDirName:"api/result",slug:"/api/result/from-try",permalink:"/tightrope/api/result/from-try",draft:!1,editUrl:"https://github.com/JamieMason/tightrope/tree/master/site/docs/api/result/from-try.mdx",tags:[{label:"invoke",permalink:"/tightrope/tags/invoke"},{label:"result",permalink:"/tightrope/tags/result"},{label:"wrap",permalink:"/tightrope/tags/wrap"}],version:"current",frontMatter:{id:"from-try",title:"fromTry",tags:["invoke","result","wrap"]},sidebar:"sidebar",previous:{title:"fromGuard",permalink:"/tightrope/api/result/from-guard"},next:{title:"index",permalink:"/tightrope/api/result/"}},p={},s=[{value:"Example",id:"example",level:2}],u={toc:s},c="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(c,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Create an ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Ok"))," or ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Err"))," from ",(0,a.kt)("inlineCode",{parentName:"p"},"try...catch"),"."),(0,a.kt)("p",null,"The purpose of ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result/from-try"},(0,a.kt)("inlineCode",{parentName:"a"},"fromTry"))," is to safely execute a given function and return either an ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok")," instance with the result or\nan ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," instance with the caught error."),(0,a.kt)("p",null,"The function is executed inside a try-catch block and if it runs without errors, ",(0,a.kt)("inlineCode",{parentName:"p"},"fromTry")," returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"Ok")," instance\nwith the result. Otherwise, ",(0,a.kt)("inlineCode",{parentName:"p"},"fromTry")," returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"Err")," instance with the caught error."),(0,a.kt)("p",null,"This function is particularly useful when working with functions that may throw errors, as it allows you to handle\nthose errors gracefully with a ",(0,a.kt)("a",{parentName:"p",href:"/tightrope/api/result"},(0,a.kt)("inlineCode",{parentName:"a"},"Result"))," object instead of allowing the error to propagate and crash your\napplication."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { fromTry } from 'tightrope/result/from-try';\n\nfunction divide(a: number, b: number): number {\n  if (b === 0) {\n    throw new Error('Cannot divide by zero!');\n  }\n  return a / b;\n}\n\nconst result = fromTry(() => divide(10, 5));\n// result will be Ok(2)\n\nconst result2 = fromTry(() => divide(10, 0));\n// result2 will be an Err with the caught error message\n")))}m.isMDXComponent=!0}}]);